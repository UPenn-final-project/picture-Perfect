{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ferna\\\\Desktop\\\\code\\\\Projects\\\\picturePerfectMemories\\\\src\\\\components\\\\Cloudnary.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { useState } from 'react'; // import carousal from './src/components/carousal'\n\nexport default function UploadPic() {\n  _s();\n\n  const [imageInputState, setImageInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n\n  const handleImageInputChange = e => {\n    const image = e.target.images;\n    previewOfImage(image);\n  };\n\n  const previewOfImage = image => {\n    //FileReader is bult in javascript api used to read files contents\n    const reader = new FileReader();\n    reader.readAsDataURL(image);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitImage = e => {\n    console.log(\"submit\");\n    e.preventDefault();\n    if (!previewSource) return;\n    uploadImage(previewSource);\n  }; //\"base64EncodedImage\" is copy and paste code snippet \n\n\n  const uploadImage = async base64EncodedImage => {\n    console.log(base64EncodedImage);\n\n    try {\n      await fetch('/api/upload', {\n        method: 'POST',\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          'Content-type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select 3 images for your scrapbook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitImage,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        value: imageInputState,\n        onChange: handleImageInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"selectedImage\",\n      style: {\n        height: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n} // import React, {useState} from 'react';\n// function Cloudnary() {\n//     const [image, setImage] = useState('')\n//     const [loading, setLoading] = useState('false')\n//     const uploadImage = async e => {\n//         const files = e.target.files\n//         const data = new FormData()\n//         data.append('file', files[0])\n//         data.append('upload_preset', 'darwin')\n//         setLoading(true)\n//         const res = await fetch(\n//             'http://api.cloudnary.com/v1_1/university-of-pennsylvania/image/upload',\n//             {\n//                 method: 'POST',\n//                 body: data\n//             }\n//         )\n//         const file = await res.json()\n//         setImage(file.secure_url)\n//         setLoading(false)\n//     }\n//     return (\n//         <div className=\"Cloudnary\">\n//         <h1>Upload Image to Begin making ScrapBook</h1>\n//         <input type=\"file\"\n//         name=\"file\"\n//         placeholder=\"Upload an image\"\n//         onChange={uploadImage}\n//         />\n//         {loading ? (\n//             <h3>Loading ...</h3>\n//         ): (\n//             <img src={image} style={{width: '300px'}} />\n//         )}\n//         </div>\n//     );\n// }\n// export default Cloudnary\n\n_s(UploadPic, \"c8VNbz2g+wXevbl/4+TpZYYNreQ=\");\n\n_c = UploadPic;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPic\");","map":{"version":3,"sources":["C:/Users/ferna/Desktop/code/Projects/picturePerfectMemories/src/components/Cloudnary.js"],"names":["React","Button","useState","UploadPic","imageInputState","setImageInputState","previewSource","setPreviewSource","handleImageInputChange","e","image","target","images","previewOfImage","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitImage","console","log","preventDefault","uploadImage","base64EncodedImage","fetch","method","body","JSON","stringify","data","headers","error","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCH,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMM,sBAAsB,GAAIC,CAAD,IAAO;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAvB;AACAC,IAAAA,cAAc,CAACH,KAAD,CAAd;AACH,GAHD;;AAKA,QAAMG,cAAc,GAAIH,KAAD,IAAW;AAC9B;AACA,UAAMI,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBN,KAArB;;AACAI,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrBV,MAAAA,gBAAgB,CAACO,MAAM,CAACI,MAAR,CAAhB;AACH,KAFD;AAGH,GAPD;;AASA,QAAMC,iBAAiB,GAAIV,CAAD,IAAM;AAC5BW,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAZ,IAAAA,CAAC,CAACa,cAAF;AACA,QAAG,CAAChB,aAAJ,EAAkB;AACnBiB,IAAAA,WAAW,CAACjB,aAAD,CAAX;AACF,GALD,CAjBgC,CAuBhC;;;AACA,QAAMiB,WAAW,GAAG,MAAOC,kBAAP,IAA6B;AAC7CJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,kBAAZ;;AACA,QAAG;AACC,YAAMC,KAAK,CAAC,aAAD,EAAe;AACxBC,QAAAA,MAAM,EAAC,MADiB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,IAAI,EAACN;AAAN,SAAf,CAFkB;AAGxBO,QAAAA,OAAO,EAAE;AAAC,0BAAe;AAAhB;AAHe,OAAf,CAAX;AAMH,KAPD,CAOE,OAAOC,KAAP,EAAa;AACXZ,MAAAA,OAAO,CAACY,KAAR,CAAcA,KAAd;AACH;AAEJ,GAbD;;AAcA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEb,iBAAhB;AACA,MAAA,SAAS,EAAC,MADV;AAAA,8BAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAEf,eAAvC;AAAwD,QAAA,QAAQ,EAAEI;AAAlE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOKF,aAAa,iBACV;AACI,MAAA,GAAG,EAAEA,aADT;AAEI,MAAA,GAAG,EAAC,eAFR;AAGI,MAAA,KAAK,EAAE;AAAE2B,QAAAA,MAAM,EAAE;AAAV;AAHX;AAAA;AAAA;AAAA;AAAA,YARR;AAAA,kBADJ;AAiBH,C,CAuDD;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GAzJwB9B,S;;KAAAA,S","sourcesContent":["import React from 'react';\nimport { Button } from 'reactstrap';\nimport { useState } from 'react';\n// import carousal from './src/components/carousal'\nexport default function UploadPic() {\n    const [imageInputState, setImageInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const handleImageInputChange = (e) => {\n        const image = e.target.images;\n        previewOfImage(image);\n    }\n\n    const previewOfImage = (image) => {\n        //FileReader is bult in javascript api used to read files contents\n        const reader = new FileReader();\n        reader.readAsDataURL(image);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        }\n    } \n\n    const handleSubmitImage = (e) =>{\n        console.log(\"submit\")\n        e.preventDefault();\n        if(!previewSource)return;\n       uploadImage(previewSource);\n    }\n    //\"base64EncodedImage\" is copy and paste code snippet \n    const uploadImage = async (base64EncodedImage) =>{\n        console.log(base64EncodedImage);\n        try{\n            await fetch('/api/upload',{\n              method:'POST',\n              body: JSON.stringify({data:base64EncodedImage}),\n              headers: {'Content-type':'application/json'},\n            });\n\n        } catch (error){\n            console.error(error);\n        }\n\n    }\n    return (\n        <>\n            <h1>Select 3 images for your scrapbook</h1>\n            <form onSubmit={handleSubmitImage} \n            className=\"form\">\n                <input type=\"file\" name=\"image\" value={imageInputState} onChange={handleImageInputChange} />\n                <Button color=\"primary\">Submit</Button>\n            </form>\n            {previewSource && (\n                <img\n                    src={previewSource}\n                    alt=\"selectedImage\"\n                    style={{ height: '200px' }}\n                />\n            )}\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {useState} from 'react';\n\n\n// function Cloudnary() {\n//     const [image, setImage] = useState('')\n//     const [loading, setLoading] = useState('false')\n\n//     const uploadImage = async e => {\n//         const files = e.target.files\n//         const data = new FormData()\n//         data.append('file', files[0])\n//         data.append('upload_preset', 'darwin')\n//         setLoading(true)\n//         const res = await fetch(\n//             'http://api.cloudnary.com/v1_1/university-of-pennsylvania/image/upload',\n//             {\n//                 method: 'POST',\n//                 body: data\n//             }\n//         )\n//         const file = await res.json()\n\n//         setImage(file.secure_url)\n//         setLoading(false)\n//     }\n\n//     return (\n//         <div className=\"Cloudnary\">\n//         <h1>Upload Image to Begin making ScrapBook</h1>\n//         <input type=\"file\"\n//         name=\"file\"\n//         placeholder=\"Upload an image\"\n//         onChange={uploadImage}\n//         />\n//         {loading ? (\n//             <h3>Loading ...</h3>\n//         ): (\n//             <img src={image} style={{width: '300px'}} />\n//         )}\n//         </div>\n//     );\n// }\n\n// export default Cloudnary"]},"metadata":{},"sourceType":"module"}