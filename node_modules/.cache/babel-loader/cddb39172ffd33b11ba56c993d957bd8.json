{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mustafamustafa/Desktop/coffee/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap';\n\nconst ModalExample = props => {\n  _s();\n\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n  const [unmountOnClose, setUnmountOnClose] = useState(true);\n\n  const toggle = () => setModal(!modal);\n\n  const changeUnmountOnClose = e => {\n    let value = e.target.value;\n    setUnmountOnClose(JSON.parse(value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      inline: true,\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"unmountOnClose\",\n          children: \"UnmountOnClose value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"unmountOnClose\",\n          id: \"unmountOnClose\",\n          onChange: changeUnmountOnClose,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"danger\",\n        onClick: toggle,\n        children: buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      className: className,\n      unmountOnClose: unmountOnClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Modal title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          placeholder: \"Write something (data should remain in modal if unmountOnClose is set to false)\",\n          rows: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: toggle,\n          children: \"Do Something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalExample, \"aak6H8Urt8YnFHAPyT3aohTZsYo=\");\n\n_c = ModalExample;\nexport default ModalExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalExample\");","map":{"version":3,"sources":["/Users/mustafamustafa/Desktop/coffee/src/components/Modal.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Form","FormGroup","ModalExample","props","buttonLabel","className","modal","setModal","unmountOnClose","setUnmountOnClose","toggle","changeUnmountOnClose","e","value","target","JSON","parse","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap';\nconst ModalExample = (props) => {\n    const {\n      buttonLabel,\n      className\n    } = props;\n  \n    const [modal, setModal] = useState(false);\n    const [unmountOnClose, setUnmountOnClose] = useState(true);\n  \n    const toggle = () => setModal(!modal);\n    const changeUnmountOnClose = e => {\n        let value = e.target.value;\n        setUnmountOnClose(JSON.parse(value));\n    }\n  \n    return (\n        <div>\n            <Form inline onSubmit={(e) => e.preventDefault()}>\n                <FormGroup>\n                    <Label for=\"unmountOnClose\">UnmountOnClose value</Label>{' '}\n                    <Input type=\"select\" name=\"unmountOnClose\" id=\"unmountOnClose\" onChange={changeUnmountOnClose}>\n                        <option value=\"true\">true</option>\n                        <option value=\"false\">false</option>\n                    </Input>\n                </FormGroup>\n                {' '}\n                <Button color=\"danger\" onClick={toggle}>{buttonLabel}</Button>\n            </Form>\n            <Modal isOpen={modal} toggle={toggle} className={className} unmountOnClose={unmountOnClose}>\n                <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n                <ModalBody>\n                    <Input type=\"textarea\" placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\" rows={5} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}